# name: Windows

# on: [push, pull_request]

# jobs:
#   msvc2019:
#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v1
#     - name: cmake
#       run: cmake -S . -B build -G "Visual Studio 16 2019" -D CMAKE_BUILD_TYPE=Debug -DJSON_BuildTests=On
#     - name: build
#       run: cmake --build build --parallel 10
#     - name: Upload a Build Artifact
#       uses: actions/upload-artifact@v2.2.2
#       with:
#         name: msvc2019.zip
#         path: build

#   clang10:
#     runs-on: windows-latest

#     steps:
#       - uses: actions/checkout@v1
#       - name: install Clang
#         run: curl -fsSL -o LLVM10.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe ; 7z x LLVM10.exe -y -o"C:/Program Files/LLVM"
#       - name: cmake
#         run: cmake -S . -B build -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe" -G"MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DJSON_BuildTests=On
#       - name: build
#         run: cmake --build build --parallel 10
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v2.2.2
#         with:
#           name: clang10.zip
#           path: build

#   clang-cl-10-x64:
#     runs-on: windows-latest

#     steps:
#       - uses: actions/checkout@v1
#       - name: cmake
#         run: cmake -S . -B build -G "Visual Studio 16 2019" -A x64 -T ClangCL -DJSON_BuildTests=On
#       - name: build
#         run: cmake --build build --config Debug --parallel 10
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v2.2.2
#         with:
#           name: clang-cl-10-x64.zip
#           path: build

#   clang-cl-10-x86:
#     runs-on: windows-latest

#     steps:
#       - uses: actions/checkout@v1
#       - name: cmake
#         run: cmake -S . -B build -G "Visual Studio 16 2019" -A Win32 -T ClangCL -DJSON_BuildTests=On
#       - name: build
#         run: cmake --build build --config Debug --parallel 10
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v2.2.2
#         with:
#           name: clang-cl-10-x86.zip
#           path: build
  
name: Rust

on: [push, pull_request]

jobs:
  build:
    name: Test rust ${{ matrix.rust }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['windows-latest']
        rust: [stable]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
        components: rustfmt
    - uses: actions/checkout@v1
      with:
        ref: msvc
#     - name: Check formatting
#       run: cargo fmt -- --check
#     - name: Run tests
#       run: cargo test --verbose
    - name: Build release
      run: cargo build --verbose --release
    - name: Upload unix binary
      uses: actions/upload-artifact@v1
      if: matrix.os != 'windows-latest'
      with:
        name: verco-${{ matrix.os }}
        path: target/release/
    - name: Upload windows binary
      uses: actions/upload-artifact@v1
      if: matrix.os == 'windows-latest'
      with:
        name: verco-${{ matrix.os }}
        path: target/release/
